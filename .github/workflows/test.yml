name: Test Coverage CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    env:
      # General env
      MIX_ENV: test
      # Cloudinary env
      CLOUDEX_API_KEY: ${{ secrets.CLOUDEX_API_KEY }}
      CLOUDEX_SECRET: ${{ secrets.CLOUDEX_SECRET }}
      CLOUDEX_CLOUD_NAME: ${{ secrets.CLOUDEX_CLOUD_NAME }}
      # Postgres env
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      # Misc env
      UPLOADS_PATH: "priv/static/uploads/"
    services:
      db:
        image: postgres
        ports: ['5432:5432']
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: erlef/setup-elixir@v1
      with:
        elixir-version: '1.12.3'
        otp-version: '23.3'
    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Output Elixir version
      run: elixir --version
    - name: Output PostgreSQL version
      run: psql --version
    - name: Output Node.js version
      run: node --version
    - name: Install dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
    - name: Compile app & deps
      run: |
        mix deps.compile
        mix compile
    - name: Setup Database
      run: |
        mix reset.ecto
    - name: Setup web client
      run: |
        mix setup.web
    - name: Run tests
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: >
        GITHUB_TOKEN=${GITHUB_TOKEN}
        mix coveralls.github -u
