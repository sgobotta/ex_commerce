import Config

# ------------------------------------------------------------------------------
# Ex Commerce configuration
#

# Configure your database
config :ex_commerce, ExCommerce.Repo,
  username: System.get_env("DB_USERNAME", "postgres"),
  password: System.get_env("DB_PASSWORD", "postgres"),
  database: System.get_env("DB_DATABASE", "ex_commerce_dev"),
  hostname: System.get_env("DB_HOSTNAME", "localhost"),
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# ------------------------------------------------------------------------------
# Ex Commerce Web configuration
#

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with webpack to recompile .js and .css sources.
config :ex_commerce, ExCommerceWeb.Endpoint,
  http: [port: 4000],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base:
    "d4VqBGN5Pol0OR4hijP7BM9lcCsmsZiXov9vaDpLe14cTcJTZ53onXAgzQMpYYmW",
  watchers: [
    npm: ["run", "watch:tailwind", cd: Path.expand("../assets", __DIR__)],
    npm: ["run", "watch", cd: Path.expand("../assets", __DIR__)]
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Note that this task requires Erlang/OTP 20 or later.
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :ex_commerce, ExCommerceWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/[^uploads].*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/ex_commerce_web/(live|views)/.*(ex)$",
      ~r"lib/ex_commerce_web/templates/.*(eex)$"
    ]
  ]

# ------------------------------------------------------------------------------
# Ex Commerce Assets configuration
#
config :ex_commerce,
  ex_commerce_assets_driver: :cloudex

# ------------------------------------------------------------------------------
# Misc Phoenix configuration
#

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# ------------------------------------------------------------------------------
# Email configuration
#

config :ex_commerce, from_email: "dev@ex.commerce"

config :ex_commerce, ExCommerce.Mailer, adapter: Bamboo.LocalAdapter

# ------------------------------------------------------------------------------
# Cloudex configuration
#

config :cloudex,
  api_key: System.fetch_env!("CLOUDEX_API_KEY"),
  secret: System.fetch_env!("CLOUDEX_SECRET"),
  cloud_name: System.fetch_env!("CLOUDEX_CLOUD_NAME")

# ------------------------------------------------------------------------------
# Misc configuration
#

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Configures git pre-commit and pre-push hooks to run a general check
config :git_hooks,
  auto_install: true,
  verbose: true,
  hooks: [
    pre_commit: [
      tasks: [
        {:mix_task, :format, ["--check-formatted"]}
      ]
    ],
    pre_push: [
      tasks: [
        {:mix_task, :check}
      ]
    ]
  ]
